
paths:
  /api/post:       # path to your endpoint
    get:
      tags:              # Tag property
        - Post            # Value of the tag
      summary: Gets every Posts
      produces:
        - application/json
      parameters:
      - in: header          # request header
        name: authorization     # name of request, can be any name
        description: 'jwt'
        default: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.km8PtRDNIEYuQKvGRSt_vm7fXX9UW-4B6siPShj54FM'
        required: true   # can also be true depending on user preference
      responses:         # server responses
        200:
          description: Ok
          content:
            application/json
        500:
          description: Error
  /api/post/{Id}:
    delete:
      tags:              # Tag property
        - Post            # Value of the tag
      summary: Removes a Post
      produces:
        - application/json
      parameters:
      - in: header          # request header
        name: authorization     # name of request, can be any name
        description: 'jwt'
        default: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.km8PtRDNIEYuQKvGRSt_vm7fXX9UW-4B6siPShj54FM'
        required: true   # can also be true depending on user preference
      - in: path
        name: Id   # Note the name is the same as in the path
        type: string
        required: true
      responses:         # server responses
        200:
          description: Ok
          content:
            application/json
        404:
          description: Item not found
        500:
          description: Error
    post:                # endpoint request type (post request)
      tags:              # Tag property
        - Post            # Value of the tag
      summary: Posts a Post
      consumes:
        - application/json
      produces:
        - string
      parameters:         # request parameters
      - in: header          # request header
        name: authorization     # name of request, can be any name
        description: 'jwt'
        default: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.km8PtRDNIEYuQKvGRSt_vm7fXX9UW-4B6siPShj54FM'
        required: true   # can also be true depending on user preference
      - in: path
        name: Id   # Note the name is the same as in the path
        type: string
        required: true
      - in: body
        name: model
        description: the Sample model
        required: true   # can also be true depending on user preference
        schema:
              properties:
                text:
                  type: string
                  example: 'abc'
                state:
                  type: string
                  enum: ['Draft', 'Private', 'Public']
                  example: 'Draft'
      responses:         # server responses
        201:
          description: Created
        500:
          description: Error